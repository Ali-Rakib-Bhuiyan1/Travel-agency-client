{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { getAuth, GoogleAuthProvider, onAuthStateChanged, signInWithPopup, signOut } from \"firebase/auth\";\nimport { useEffect, useState } from \"react\";\nimport initializAuthentication from \"../Firebase/firebase.init\";\ninitializAuthentication();\n\nconst UseFirebase = () => {\n  _s();\n\n  // Create state for update data\n  const [user, setUser] = useState({});\n  const [isLoading, setIsLoading] = useState(true); // Create GoogleAuthProvider and auth \n\n  const GoogleProvider = new GoogleAuthProvider();\n  const auth = getAuth(); // create SignInWithGoogle function\n\n  const SignInWithGoogle = () => {\n    setIsLoading(true);\n    return signInWithPopup(auth, GoogleProvider);\n  }; // Create onAuth Change function\n\n\n  useEffect(() => {\n    const unsubscribed = onAuthStateChanged(auth, user => {\n      if (user) {\n        setUser(user);\n      } else {\n        setUser({});\n      }\n\n      setIsLoading(false);\n    });\n    return () => unsubscribed;\n  }, []); // Create Logout function\n\n  const LogOut = () => {\n    setIsLoading(true);\n    signOut(auth).then(() => {}).finally(() => {\n      setIsLoading(false);\n    });\n  }; // Return Value from here\n\n\n  return {\n    SignInWithGoogle,\n    isLoading,\n    setIsLoading,\n    user,\n    LogOut\n  };\n};\n\n_s(UseFirebase, \"6hUK0E8YndCJdFKOGNBKQ9uTnV0=\");\n\n_c = UseFirebase;\nexport default UseFirebase;\n\nvar _c;\n\n$RefreshReg$(_c, \"UseFirebase\");","map":{"version":3,"sources":["E:/final-step/travel-agency-main/src/Hooks/useFirebase.js"],"names":["getAuth","GoogleAuthProvider","onAuthStateChanged","signInWithPopup","signOut","useEffect","useState","initializAuthentication","UseFirebase","user","setUser","isLoading","setIsLoading","GoogleProvider","auth","SignInWithGoogle","unsubscribed","LogOut","then","finally"],"mappings":";;AAAA,SACIA,OADJ,EACaC,kBADb,EACiCC,kBADjC,EACqDC,eADrD,EACsEC,OADtE,QAEO,eAFP;AAGA,SAASC,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AACA,OAAOC,uBAAP,MAAoC,2BAApC;AAKAA,uBAAuB;;AAEvB,MAAMC,WAAW,GAAG,MAAM;AAAA;;AACtB;AACA,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBJ,QAAQ,CAAC,EAAD,CAAhC;AACA,QAAM,CAACK,SAAD,EAAYC,YAAZ,IAA4BN,QAAQ,CAAC,IAAD,CAA1C,CAHsB,CAKtB;;AACA,QAAMO,cAAc,GAAG,IAAIZ,kBAAJ,EAAvB;AACA,QAAMa,IAAI,GAAGd,OAAO,EAApB,CAPsB,CAStB;;AACA,QAAMe,gBAAgB,GAAG,MAAM;AAC3BH,IAAAA,YAAY,CAAC,IAAD,CAAZ;AACA,WAAOT,eAAe,CAACW,IAAD,EAAOD,cAAP,CAAtB;AACH,GAHD,CAVsB,CAgBtB;;;AACAR,EAAAA,SAAS,CAAC,MAAM;AACZ,UAAMW,YAAY,GAAGd,kBAAkB,CAACY,IAAD,EAAQL,IAAD,IAAU;AACpD,UAAIA,IAAJ,EAAU;AACNC,QAAAA,OAAO,CAACD,IAAD,CAAP;AACH,OAFD,MAGK;AACDC,QAAAA,OAAO,CAAC,EAAD,CAAP;AACH;;AACDE,MAAAA,YAAY,CAAC,KAAD,CAAZ;AACH,KARsC,CAAvC;AASA,WAAO,MAAMI,YAAb;AACH,GAXQ,EAWP,EAXO,CAAT,CAjBsB,CA8BtB;;AACA,QAAMC,MAAM,GAAG,MAAM;AACjBL,IAAAA,YAAY,CAAC,IAAD,CAAZ;AACAR,IAAAA,OAAO,CAACU,IAAD,CAAP,CACKI,IADL,CACU,MAAM,CAAG,CADnB,EAEKC,OAFL,CAEa,MAAM;AACXP,MAAAA,YAAY,CAAC,KAAD,CAAZ;AACH,KAJL;AAKH,GAPD,CA/BsB,CAwCtB;;;AACA,SAAO;AACHG,IAAAA,gBADG;AAEHJ,IAAAA,SAFG;AAGHC,IAAAA,YAHG;AAIHH,IAAAA,IAJG;AAKHQ,IAAAA;AALG,GAAP;AAOH,CAhDD;;GAAMT,W;;KAAAA,W;AAkDN,eAAeA,WAAf","sourcesContent":["import {\n    getAuth, GoogleAuthProvider, onAuthStateChanged, signInWithPopup, signOut\n} from \"firebase/auth\";\nimport { useEffect, useState } from \"react\";\nimport initializAuthentication from \"../Firebase/firebase.init\";\n\n\n\n\ninitializAuthentication();\n\nconst UseFirebase = () => {\n    // Create state for update data\n    const [user, setUser] = useState({});\n    const [isLoading, setIsLoading] = useState(true);\n\n    // Create GoogleAuthProvider and auth \n    const GoogleProvider = new GoogleAuthProvider();\n    const auth = getAuth();\n\n    // create SignInWithGoogle function\n    const SignInWithGoogle = () => {\n        setIsLoading(true);\n        return signInWithPopup(auth, GoogleProvider)\n    };\n\n\n    // Create onAuth Change function\n    useEffect(() => {\n        const unsubscribed = onAuthStateChanged(auth, (user) => {\n            if (user) {\n                setUser(user);\n            }\n            else {\n                setUser({});\n            }\n            setIsLoading(false);\n        });\n        return () => unsubscribed;\n    },[]);\n\n    // Create Logout function\n    const LogOut = () => {\n        setIsLoading(true);\n        signOut(auth)\n            .then(() => { })\n            .finally(() => {\n                setIsLoading(false);\n            })\n    };\n\n    // Return Value from here\n    return {\n        SignInWithGoogle,\n        isLoading,\n        setIsLoading,\n        user,\n        LogOut\n    };\n};\n\nexport default UseFirebase;"]},"metadata":{},"sourceType":"module"}